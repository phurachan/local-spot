{
  "openapi": "3.0.3",
  "info": {
    "title": "Web Admin Base API",
    "description": "Comprehensive API documentation for Nuxt 4.1.1 admin panel with user management, authentication, and role-based access control",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    },
    {
      "url": "https://local-spot-inky.vercel.app/api",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64f123456789abcd12345678"
          },
          "name": {
            "type": "string",
            "example": "สมชาย ใจดี"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "somchai@example.com"
          },
          "role": {
            "type": "string",
            "example": "admin"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "position": {
            "type": "string",
            "example": "Senior Developer"
          },
          "phone": {
            "type": "string",
            "example": "081-234-5678"
          },
          "website": {
            "type": "string",
            "example": "https://example.com"
          },
          "avatar": {
            "type": "string",
            "example": "https://example.com/avatar.jpg"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "64f123456789abcd12345679"
            ]
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64f123456789abcd12345679"
          },
          "name": {
            "type": "string",
            "example": "ผู้ดูแลระบบ"
          },
          "description": {
            "type": "string",
            "example": "System Administrator with full access"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "user.create",
              "user.read",
              "user.update",
              "user.delete"
            ]
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdBy": {
            "type": "string",
            "example": "64f123456789abcd12345678"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64f123456789abcd12345680"
          },
          "name": {
            "type": "string",
            "example": "user.create"
          },
          "description": {
            "type": "string",
            "example": "Create new users"
          },
          "module": {
            "type": "string",
            "example": "user-management"
          },
          "action": {
            "type": "string",
            "enum": [
              "create",
              "read",
              "update",
              "delete",
              "access",
              "hr_view",
              "approve",
              "reject",
              "balance_manage",
              "export",
              "submit",
              "reports"
            ],
            "example": "create"
          },
          "resource": {
            "type": "string",
            "example": "user"
          },
          "type": {
            "type": "string",
            "enum": [
              "menu",
              "action",
              "input"
            ],
            "example": "action"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-15T10:30:00Z"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object"
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "example": 10
          },
          "total": {
            "type": "integer",
            "example": 100
          },
          "pages": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": true
          },
          "statusCode": {
            "type": "integer",
            "example": 400
          },
          "statusMessage": {
            "type": "string",
            "description": "i18n constant key for error message",
            "example": "REQUIRED_FIELDS_MISSING"
          },
          "message": {
            "type": "string",
            "description": "i18n constant key for error message",
            "example": "REQUIRED_FIELDS_MISSING"
          },
          "data": {
            "type": "object",
            "properties": {
              "messages": {
                "type": "object",
                "properties": {
                  "th": {
                    "type": "string",
                    "example": "ข้อมูลจำเป็นขาดหายไป"
                  },
                  "en": {
                    "type": "string",
                    "example": "Required fields are missing"
                  }
                }
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of i18n constant keys for specific validation errors",
                "example": [
                  "FIELD_EMAIL_REQUIRED",
                  "FIELD_PASSWORD_REQUIRED"
                ]
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "admin@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "password123"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "สมชาย ใจดี"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "somchai@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "password123"
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "position": {
            "type": "string",
            "example": "Developer"
          },
          "phone": {
            "type": "string",
            "example": "081-234-5678"
          }
        }
      },
      "UserCreateRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "สมชาย ใจดี"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "somchai@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "password123"
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "position": {
            "type": "string",
            "example": "Developer"
          },
          "phone": {
            "type": "string",
            "example": "081-234-5678"
          },
          "website": {
            "type": "string",
            "example": "https://example.com"
          },
          "avatar": {
            "type": "string",
            "example": "https://example.com/avatar.jpg"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "64f123456789abcd12345679"
            ]
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "สมชาย ใจดี"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "somchai@example.com"
          },
          "role": {
            "type": "string",
            "example": "admin"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "position": {
            "type": "string",
            "example": "Senior Developer"
          },
          "phone": {
            "type": "string",
            "example": "081-234-5678"
          },
          "website": {
            "type": "string",
            "example": "https://example.com"
          },
          "avatar": {
            "type": "string",
            "example": "https://example.com/avatar.jpg"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "64f123456789abcd12345679"
            ]
          }
        }
      },
      "HotelContent": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65f1234567890abcdef12345"
          },
          "type": {
            "type": "string",
            "example": "hotel"
          },
          "title": {
            "type": "string",
            "example": "บ้านไทยรีสอร์ท"
          },
          "description": {
            "type": "string",
            "example": "รีสอร์ทสไตล์ล้านนา ท่ามกลางธรรมชาติที่สวยงาม"
          },
          "category": {
            "type": "string",
            "enum": [
              "hotel",
              "resort",
              "hostel",
              "guesthouse",
              "villa"
            ],
            "example": "resort"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "/images/hotels/hotel1.jpg"
            ]
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "featured": {
            "type": "boolean",
            "example": true
          },
          "order": {
            "type": "number",
            "example": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "รีสอร์ท",
              "ธรรมชาติ",
              "ล้านนา"
            ]
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "amenities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "WiFi ฟรี",
              "สระว่ายน้ำ",
              "สปา",
              "ร้านอาหาร"
            ]
          },
          "roomTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomType"
            }
          },
          "checkInOut": {
            "type": "object",
            "properties": {
              "checkIn": {
                "type": "string",
                "example": "14:00"
              },
              "checkOut": {
                "type": "string",
                "example": "12:00"
              }
            }
          },
          "policies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ห้ามสูบบุหรี่",
              "ห้ามนำสัตว์เลี้ยง"
            ]
          },
          "nearbyAttractions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ดอยสุเทพ",
              "ตลาดวันเสาร์",
              "ม่อนแจ่ม"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-20T10:30:00Z"
          }
        }
      },
      "RestaurantContent": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65f1234567890abcdef12346"
          },
          "type": {
            "type": "string",
            "example": "restaurant"
          },
          "title": {
            "type": "string",
            "example": "ร้านข้าวซอยแม่ดำ"
          },
          "description": {
            "type": "string",
            "example": "ร้านข้าวซอยแท้ๆ สูตรดั้งเดิม รสชาติเข้มข้น"
          },
          "category": {
            "type": "string",
            "enum": [
              "restaurant",
              "cafe",
              "street_food",
              "local_cuisine",
              "international"
            ],
            "example": "local_cuisine"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "/images/restaurants/khao-soi.jpg"
            ]
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "featured": {
            "type": "boolean",
            "example": true
          },
          "order": {
            "type": "number",
            "example": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ข้าวซอย",
              "อาหารเหนือ",
              "ดั้งเดิม"
            ]
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "cuisine": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ไทย",
              "เหนือ"
            ]
          },
          "priceRange": {
            "type": "string",
            "enum": [
              "budget",
              "mid_range",
              "fine_dining"
            ],
            "example": "budget"
          },
          "operatingHours": {
            "$ref": "#/components/schemas/OperatingHours"
          },
          "specialties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ข้าวซอยไก่",
              "ข้าวซอยเนื้อ",
              "ลาบหมู"
            ]
          },
          "dietaryOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ไม่มีหมู"
            ]
          },
          "delivery": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean",
                "example": true
              },
              "platforms": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "Grab Food",
                  "Food Panda"
                ]
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-20T10:30:00Z"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "123 หมู่ 5 ตำบลแม่ริม"
          },
          "district": {
            "type": "string",
            "example": "แม่ริม"
          },
          "province": {
            "type": "string",
            "example": "เชียงใหม่"
          },
          "coordinates": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "example": 18.8845
              },
              "lng": {
                "type": "number",
                "example": 98.9934
              }
            }
          }
        }
      },
      "ContactInfo": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "053-123456"
            ]
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "info@example.com"
          },
          "website": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com"
          },
          "lineOA": {
            "type": "string",
            "example": "@lineoa"
          }
        }
      },
      "RoomType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ห้องดีลักซ์"
          },
          "description": {
            "type": "string",
            "example": "ห้องพักแบบดีลักซ์ วิวสวน"
          },
          "maxGuests": {
            "type": "number",
            "example": 2
          },
          "priceRange": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number",
                "example": 2500
              },
              "max": {
                "type": "number",
                "example": 3500
              }
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OperatingHours": {
        "type": "object",
        "properties": {
          "monday": {
            "$ref": "#/components/schemas/DaySchedule"
          },
          "tuesday": {
            "$ref": "#/components/schemas/DaySchedule"
          },
          "wednesday": {
            "$ref": "#/components/schemas/DaySchedule"
          },
          "thursday": {
            "$ref": "#/components/schemas/DaySchedule"
          },
          "friday": {
            "$ref": "#/components/schemas/DaySchedule"
          },
          "saturday": {
            "$ref": "#/components/schemas/DaySchedule"
          },
          "sunday": {
            "$ref": "#/components/schemas/DaySchedule"
          }
        }
      },
      "DaySchedule": {
        "type": "object",
        "properties": {
          "open": {
            "type": "string",
            "example": "08:00"
          },
          "close": {
            "type": "string",
            "example": "17:00"
          },
          "closed": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "CMSApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "statusCode": {
            "type": "integer",
            "example": 200
          },
          "statusMessage": {
            "type": "string",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "CMSListResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CMSApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "pagination": {
                    "type": "object",
                    "properties": {
                      "page": {
                        "type": "integer",
                        "example": 1
                      },
                      "limit": {
                        "type": "integer",
                        "example": 10
                      },
                      "total": {
                        "type": "integer",
                        "example": 100
                      },
                      "totalPages": {
                        "type": "integer",
                        "example": 10
                      }
                    }
                  },
                  "filters": {
                    "type": "object"
                  }
                }
              }
            }
          }
        ]
      },
      "TravelServiceContent": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65f1234567890abcdef12347"
          },
          "type": {
            "type": "string",
            "example": "travel_service"
          },
          "title": {
            "type": "string",
            "example": "ทัวร์ดอยสุเทพ-ปุยครึ่งวัน"
          },
          "description": {
            "type": "string",
            "example": "ทัวร์เที่ยวชมวัดพระธาตุดอยสุเทพและชมวิวเมืองเชียงใหม่"
          },
          "category": {
            "type": "string",
            "enum": [
              "transport",
              "tour",
              "guide",
              "rental",
              "activity"
            ],
            "example": "tour"
          },
          "serviceType": {
            "type": "string",
            "example": "ทัวร์แบบกลุ่ม"
          },
          "location": {
            "type": "object",
            "properties": {
              "serviceArea": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "เมืองเชียงใหม่",
                  "ดอยสุเทพ"
                ]
              },
              "meetingPoint": {
                "type": "string",
                "example": "หน้าโรงแรมดิเอ็มเพรส"
              },
              "coordinates": {
                "type": "object",
                "properties": {
                  "lat": {
                    "type": "number",
                    "example": 18.8045
                  },
                  "lng": {
                    "type": "number",
                    "example": 98.9695
                  }
                }
              }
            }
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "pricing": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "per_person",
                  "per_group",
                  "per_hour",
                  "per_day"
                ],
                "example": "per_person"
              },
              "amount": {
                "type": "number",
                "example": 500
              },
              "currency": {
                "type": "string",
                "example": "THB"
              },
              "includes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "รถรับ-ส่ง",
                  "ค่าเข้าชม",
                  "มัคคุเทศก์"
                ]
              },
              "excludes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "อาหาร",
                  "ทิป"
                ]
              }
            }
          },
          "duration": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number",
                "example": 4
              },
              "max": {
                "type": "number",
                "example": 5
              },
              "unit": {
                "type": "string",
                "enum": [
                  "hours",
                  "days"
                ],
                "example": "hours"
              }
            }
          },
          "capacity": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number",
                "example": 2
              },
              "max": {
                "type": "number",
                "example": 15
              }
            }
          },
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ใส่เสื้อผ้าสุภาพ",
              "ถอดรองเท้าก่อนเข้าวัด"
            ]
          },
          "availability": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "จันทร์-อาทิตย์",
              "08:00-17:00"
            ]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "featured": {
            "type": "boolean",
            "example": true
          },
          "order": {
            "type": "number",
            "example": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ทัวร์",
              "วัด",
              "วัฒนธรรม"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LocalProductContent": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65f1234567890abcdef12348"
          },
          "type": {
            "type": "string",
            "example": "local_product"
          },
          "title": {
            "type": "string",
            "example": "ร่มกระดาษสา บ่อสร้าง"
          },
          "description": {
            "type": "string",
            "example": "ร่มกระดาษสาทำมือ ลวดลายล้านนาแท้"
          },
          "category": {
            "type": "string",
            "enum": [
              "handicraft",
              "food_product",
              "souvenir",
              "textile",
              "art"
            ],
            "example": "handicraft"
          },
          "vendor": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "หมู่บ้านหัตถกรรมบ่อสร้าง"
              },
              "description": {
                "type": "string",
                "example": "หมู่บ้านผลิตร่มและหัตถกรรมกระดาษสา"
              },
              "location": {
                "type": "string",
                "example": "อ.สันกำแพง จ.เชียงใหม่"
              },
              "contactInfo": {
                "$ref": "#/components/schemas/ContactInfo"
              }
            }
          },
          "product": {
            "type": "object",
            "properties": {
              "materials": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "กระดาษสา",
                  "ไม้ไผ่"
                ]
              },
              "sizes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "S",
                  "M",
                  "L"
                ]
              },
              "colors": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "แดง",
                  "น้ำเงิน",
                  "เหลือง"
                ]
              },
              "weight": {
                "type": "number",
                "example": 0.5
              },
              "dimensions": {
                "type": "string",
                "example": "60x60 ซม."
              }
            }
          },
          "pricing": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "example": 350
              },
              "currency": {
                "type": "string",
                "example": "THB"
              },
              "discounts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "quantity": {
                      "type": "number"
                    },
                    "discountPercent": {
                      "type": "number"
                    }
                  }
                },
                "example": [
                  {
                    "quantity": 5,
                    "discountPercent": 10
                  }
                ]
              }
            }
          },
          "availability": {
            "type": "object",
            "properties": {
              "inStock": {
                "type": "boolean",
                "example": true
              },
              "stockQuantity": {
                "type": "number",
                "example": 50
              },
              "seasonality": {
                "type": "string",
                "example": "ตลอดทั้งปี"
              }
            }
          },
          "shipping": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean",
                "example": true
              },
              "areas": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "ทั่วประเทศ"
                ]
              },
              "cost": {
                "type": "number",
                "example": 50
              }
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "featured": {
            "type": "boolean",
            "example": false
          },
          "order": {
            "type": "number",
            "example": 0
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ร่ม",
              "หัตถกรรม",
              "ล้านนา"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventContent": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65f1234567890abcdef12349"
          },
          "type": {
            "type": "string",
            "example": "event"
          },
          "title": {
            "type": "string",
            "example": "งานกาชาดจังหวัดเชียงใหม่"
          },
          "description": {
            "type": "string",
            "example": "งานกาชาดประจำปี จังหวัดเชียงใหม่"
          },
          "category": {
            "type": "string",
            "enum": [
              "festival",
              "market",
              "cultural",
              "sports",
              "workshop",
              "seasonal"
            ],
            "example": "festival"
          },
          "schedule": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "format": "date-time",
                "example": "2025-12-01T00:00:00Z"
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "example": "2025-12-15T00:00:00Z"
              },
              "times": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "example": "10:00"
                    },
                    "end": {
                      "type": "string",
                      "example": "22:00"
                    }
                  }
                }
              },
              "recurring": {
                "type": "object",
                "properties": {
                  "pattern": {
                    "type": "string",
                    "enum": [
                      "daily",
                      "weekly",
                      "monthly",
                      "yearly"
                    ],
                    "example": "yearly"
                  },
                  "interval": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          },
          "location": {
            "type": "object",
            "properties": {
              "venue": {
                "type": "string",
                "example": "บริเวณสนามกีฬากลางจังหวัด"
              },
              "address": {
                "type": "string",
                "example": "สนามกีฬากลาง"
              },
              "district": {
                "type": "string",
                "example": "เมือง"
              },
              "province": {
                "type": "string",
                "example": "เชียงใหม่"
              },
              "coordinates": {
                "type": "object",
                "properties": {
                  "lat": {
                    "type": "number"
                  },
                  "lng": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "organizer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "สภากาชาดจังหวัดเชียงใหม่"
              },
              "contactInfo": {
                "$ref": "#/components/schemas/ContactInfo"
              }
            }
          },
          "ticketing": {
            "type": "object",
            "properties": {
              "required": {
                "type": "boolean",
                "example": false
              },
              "price": {
                "type": "number",
                "example": 0
              },
              "currency": {
                "type": "string",
                "example": "THB"
              },
              "bookingUrl": {
                "type": "string",
                "example": ""
              },
              "freeEntry": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "capacity": {
            "type": "number",
            "example": 10000
          },
          "targetAudience": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ทุกเพศทุกวัย"
            ]
          },
          "activities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ชมการแสดง",
              "ชิมอาหาร",
              "ช้อปปิ้ง"
            ]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "featured": {
            "type": "boolean",
            "example": true
          },
          "order": {
            "type": "number",
            "example": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "งานกาชาด",
              "เทศกาล",
              "เชียงใหม่"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TravelServiceCreateRequest": {
        "type": "object",
        "required": [
          "title",
          "description",
          "category",
          "serviceType"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "ทัวร์ดอยสุเทพ-ปุยครึ่งวัน"
          },
          "description": {
            "type": "string",
            "example": "ทัวร์เที่ยวชมวัดพระธาตุดอยสุเทพและชมวิวเมืองเชียงใหม่"
          },
          "category": {
            "type": "string",
            "enum": [
              "transport",
              "tour",
              "guide",
              "rental",
              "activity"
            ],
            "example": "tour"
          },
          "serviceType": {
            "type": "string",
            "example": "ทัวร์แบบกลุ่ม"
          },
          "location": {
            "type": "object",
            "properties": {
              "serviceArea": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "เมืองเชียงใหม่",
                  "ดอยสุเทพ"
                ]
              },
              "meetingPoint": {
                "type": "string",
                "example": "หน้าโรงแรมดิเอ็มเพรส"
              },
              "coordinates": {
                "type": "object",
                "properties": {
                  "lat": {
                    "type": "number",
                    "example": 18.8045
                  },
                  "lng": {
                    "type": "number",
                    "example": 98.9695
                  }
                }
              }
            }
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfo"
          },
          "pricing": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "per_person",
                  "per_group",
                  "per_hour",
                  "per_day"
                ],
                "example": "per_person"
              },
              "amount": {
                "type": "number",
                "example": 500
              },
              "currency": {
                "type": "string",
                "example": "THB"
              },
              "includes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "รถรับ-ส่ง",
                  "ค่าเข้าชม",
                  "มัคคุเทศก์"
                ]
              },
              "excludes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "อาหาร",
                  "ทิป"
                ]
              }
            }
          },
          "duration": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number",
                "example": 4
              },
              "max": {
                "type": "number",
                "example": 5
              },
              "unit": {
                "type": "string",
                "enum": [
                  "hours",
                  "days"
                ],
                "example": "hours"
              }
            }
          },
          "capacity": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number",
                "example": 2
              },
              "max": {
                "type": "number",
                "example": 15
              }
            }
          },
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ใส่เสื้อผ้าสุภาพ",
              "ถอดรองเท้าก่อนเข้าวัด"
            ]
          },
          "availability": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "จันทร์-อาทิตย์",
              "08:00-17:00"
            ]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "featured": {
            "type": "boolean",
            "default": false
          },
          "order": {
            "type": "number",
            "default": 0
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ทัวร์",
              "วัด",
              "วัฒนธรรม"
            ]
          }
        }
      },
      "LocalProductCreateRequest": {
        "type": "object",
        "required": [
          "title",
          "description",
          "category",
          "vendor",
          "pricing"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "ร่มกระดาษสา บ่อสร้าง"
          },
          "description": {
            "type": "string",
            "example": "ร่มกระดาษสาทำมือ ลวดลายล้านนาแท้"
          },
          "category": {
            "type": "string",
            "enum": [
              "handicraft",
              "food_product",
              "souvenir",
              "textile",
              "art"
            ],
            "example": "handicraft"
          },
          "vendor": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "example": "หมู่บ้านหัตถกรรมบ่อสร้าง"
              },
              "description": {
                "type": "string",
                "example": "หมู่บ้านผลิตร่มและหัตถกรรมกระดาษสา"
              },
              "location": {
                "type": "string",
                "example": "อ.สันกำแพง จ.เชียงใหม่"
              },
              "contactInfo": {
                "$ref": "#/components/schemas/ContactInfo"
              }
            }
          },
          "product": {
            "type": "object",
            "properties": {
              "materials": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "กระดาษสา",
                  "ไม้ไผ่"
                ]
              },
              "sizes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "S",
                  "M",
                  "L"
                ]
              },
              "colors": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "แดง",
                  "น้ำเงิน",
                  "เหลือง"
                ]
              },
              "weight": {
                "type": "number",
                "example": 0.5
              },
              "dimensions": {
                "type": "string",
                "example": "60x60 ซม."
              }
            }
          },
          "pricing": {
            "type": "object",
            "required": [
              "price"
            ],
            "properties": {
              "price": {
                "type": "number",
                "example": 350
              },
              "currency": {
                "type": "string",
                "example": "THB"
              },
              "discounts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "quantity": {
                      "type": "number"
                    },
                    "discountPercent": {
                      "type": "number"
                    }
                  }
                },
                "example": [
                  {
                    "quantity": 5,
                    "discountPercent": 10
                  }
                ]
              }
            }
          },
          "availability": {
            "type": "object",
            "properties": {
              "inStock": {
                "type": "boolean",
                "example": true
              },
              "stockQuantity": {
                "type": "number",
                "example": 50
              },
              "seasonality": {
                "type": "string",
                "example": "ตลอดทั้งปี"
              }
            }
          },
          "shipping": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean",
                "example": true
              },
              "areas": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "ทั่วประเทศ"
                ]
              },
              "cost": {
                "type": "number",
                "example": 50
              }
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "featured": {
            "type": "boolean",
            "default": false
          },
          "order": {
            "type": "number",
            "default": 0
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ร่ม",
              "หัตถกรรม",
              "ล้านนา"
            ]
          }
        }
      },
      "EventCreateRequest": {
        "type": "object",
        "required": [
          "title",
          "description",
          "category",
          "schedule",
          "location",
          "organizer"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "งานกาชาดจังหวัดเชียงใหม่"
          },
          "description": {
            "type": "string",
            "example": "งานกาชาดประจำปี จังหวัดเชียงใหม่"
          },
          "category": {
            "type": "string",
            "enum": [
              "festival",
              "market",
              "cultural",
              "sports",
              "workshop",
              "seasonal"
            ],
            "example": "festival"
          },
          "schedule": {
            "type": "object",
            "required": [
              "startDate",
              "endDate"
            ],
            "properties": {
              "startDate": {
                "type": "string",
                "format": "date-time",
                "example": "2025-12-01T00:00:00Z"
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "example": "2025-12-15T00:00:00Z"
              },
              "times": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "example": "10:00"
                    },
                    "end": {
                      "type": "string",
                      "example": "22:00"
                    }
                  }
                }
              },
              "recurring": {
                "type": "object",
                "properties": {
                  "pattern": {
                    "type": "string",
                    "enum": [
                      "daily",
                      "weekly",
                      "monthly",
                      "yearly"
                    ],
                    "example": "yearly"
                  },
                  "interval": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          },
          "location": {
            "type": "object",
            "required": [
              "venue",
              "address",
              "district",
              "province"
            ],
            "properties": {
              "venue": {
                "type": "string",
                "example": "บริเวณสนามกีฬากลางจังหวัด"
              },
              "address": {
                "type": "string",
                "example": "สนามกีฬากลาง"
              },
              "district": {
                "type": "string",
                "example": "เมือง"
              },
              "province": {
                "type": "string",
                "example": "เชียงใหม่"
              },
              "coordinates": {
                "type": "object",
                "properties": {
                  "lat": {
                    "type": "number"
                  },
                  "lng": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "organizer": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "example": "สภากาชาดจังหวัดเชียงใหม่"
              },
              "contactInfo": {
                "$ref": "#/components/schemas/ContactInfo"
              }
            }
          },
          "ticketing": {
            "type": "object",
            "properties": {
              "required": {
                "type": "boolean",
                "example": false
              },
              "price": {
                "type": "number",
                "example": 0
              },
              "currency": {
                "type": "string",
                "example": "THB"
              },
              "bookingUrl": {
                "type": "string",
                "example": ""
              },
              "freeEntry": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "capacity": {
            "type": "number",
            "example": 10000
          },
          "targetAudience": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ทุกเพศทุกวัย"
            ]
          },
          "activities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ชมการแสดง",
              "ชิมอาหาร",
              "ช้อปปิ้ง"
            ]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "featured": {
            "type": "boolean",
            "default": false
          },
          "order": {
            "type": "number",
            "default": 0
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "งานกาชาด",
              "เทศกาล",
              "เชียงใหม่"
            ]
          }
        }
      },
      "NewsContent": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64f123456789abcd12345678"
          },
          "title": {
            "type": "string",
            "example": "เปิดตัวแพ็คเกจท่องเที่ยวใหม่ราคาพิเศษ"
          },
          "description": {
            "type": "string",
            "example": "แพ็คเกจท่องเที่ยวราคาพิเศษสำหรับช่วงปีใหม่"
          },
          "content": {
            "type": "string",
            "example": "เนื้อหาข่าวแบบเต็ม รองรับ HTML..."
          },
          "excerpt": {
            "type": "string",
            "example": "สรุปเนื้อหาสำหรับแสดงในหน้ารายการ"
          },
          "type": {
            "type": "string",
            "example": "news"
          },
          "category": {
            "type": "string",
            "enum": [
              "announcement",
              "promotion",
              "event_news",
              "travel_tips",
              "local_story",
              "business_update"
            ],
            "example": "promotion"
          },
          "author": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "สมชาย ใจดี"
              },
              "email": {
                "type": "string",
                "example": "somchai@example.com"
              },
              "bio": {
                "type": "string",
                "example": "นักเขียนท่องเที่ยว"
              }
            }
          },
          "coverImage": {
            "type": "string",
            "example": "/uploads/news/cover1.jpg"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-02T10:00:00Z"
          },
          "source": {
            "type": "string",
            "example": "Local Spot News"
          },
          "location": {
            "type": "object",
            "properties": {
              "province": {
                "type": "string",
                "example": "เชียงใหม่"
              },
              "district": {
                "type": "string",
                "example": "เมือง"
              }
            }
          },
          "relatedContent": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "contentType": {
                  "type": "string",
                  "enum": [
                    "hotel",
                    "restaurant",
                    "travel_service",
                    "local_product",
                    "event"
                  ],
                  "example": "hotel"
                },
                "contentId": {
                  "type": "string",
                  "example": "64f123456789abcd12345679"
                },
                "title": {
                  "type": "string",
                  "example": "บ้านไทยรีสอร์ท"
                }
              }
            }
          },
          "viewCount": {
            "type": "integer",
            "example": 150
          },
          "readTime": {
            "type": "integer",
            "example": 5
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "/uploads/news/image1.jpg",
              "/uploads/news/image2.jpg"
            ]
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "featured": {
            "type": "boolean",
            "example": false
          },
          "order": {
            "type": "integer",
            "example": 0
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ท่องเที่ยว",
              "โปรโมชั่น",
              "เชียงใหม่"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-02T10:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-02T10:00:00Z"
          },
          "createdBy": {
            "type": "string",
            "example": "64f123456789abcd12345677"
          },
          "updatedBy": {
            "type": "string",
            "example": "64f123456789abcd12345677"
          }
        }
      }
    },
    "parameters": {
      "PageParam": {
        "name": "page",
        "in": "query",
        "description": "Page number",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "LimitParam": {
        "name": "limit",
        "in": "query",
        "description": "Number of items per page",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        }
      },
      "SearchParam": {
        "name": "search",
        "in": "query",
        "description": "Search term",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "description": "Authenticate user and return JWT token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                            },
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User registration",
        "description": "Register a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                            },
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get current user",
        "description": "Get authenticated user profile",
        "responses": {
          "200": {
            "description": "User profile retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get users list",
        "description": "Retrieve paginated list of users with filtering and search",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "name": "filter[role]",
            "in": "query",
            "description": "Filter by role",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[isActive]",
            "in": "query",
            "description": "Filter by active status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "filter[department]",
            "in": "query",
            "description": "Filter by department",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Create user",
        "description": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update user",
        "description": "Update an existing user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Delete user",
        "description": "Soft delete a user (set isActive to false)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Role Management"
        ],
        "summary": "Get roles list",
        "description": "Retrieve paginated list of roles with filtering",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "name": "filter[isActive]",
            "in": "query",
            "description": "Filter by active status",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Roles list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Role"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Role Management"
        ],
        "summary": "Create role",
        "description": "Create a new role",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "ผู้จัดการฝ่ายขาย"
                  },
                  "description": {
                    "type": "string",
                    "example": "Sales Manager with team management permissions"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "user.read",
                      "report.view"
                    ]
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "Role Management"
        ],
        "summary": "Get role by ID",
        "description": "Retrieve a specific role by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Role ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role Management"
        ],
        "summary": "Update role",
        "description": "Update an existing role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Role ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "ผู้จัดการฝ่ายขาย"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated description"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "user.read",
                      "report.view",
                      "user.update"
                    ]
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Role"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role Management"
        ],
        "summary": "Delete role",
        "description": "Delete a role (only if no users are assigned)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Role ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete role - users assigned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/roles/seed": {
      "post": {
        "tags": [
          "Role Management"
        ],
        "summary": "Seed roles",
        "description": "Seed initial Thai roles and permissions",
        "security": [],
        "responses": {
          "201": {
            "description": "Roles seeded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Get permissions list",
        "description": "Retrieve paginated list of permissions with filtering",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/SearchParam"
          },
          {
            "name": "filter[module]",
            "in": "query",
            "description": "Filter by module",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[action]",
            "in": "query",
            "description": "Filter by action",
            "schema": {
              "type": "string",
              "enum": [
                "create",
                "read",
                "update",
                "delete",
                "access",
                "hr_view",
                "approve",
                "reject",
                "balance_manage",
                "export",
                "submit",
                "reports"
              ]
            }
          },
          {
            "name": "filter[type]",
            "in": "query",
            "description": "Filter by type",
            "schema": {
              "type": "string",
              "enum": [
                "menu",
                "action",
                "input"
              ]
            }
          },
          {
            "name": "filter[isActive]",
            "in": "query",
            "description": "Filter by active status",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Permission"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Create permission",
        "description": "Create a new permission",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "module",
                  "action",
                  "resource"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "user.export"
                  },
                  "description": {
                    "type": "string",
                    "example": "Export user data to various formats"
                  },
                  "module": {
                    "type": "string",
                    "example": "user-management"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "create",
                      "read",
                      "update",
                      "delete",
                      "access",
                      "hr_view",
                      "approve",
                      "reject",
                      "balance_manage",
                      "export",
                      "submit",
                      "reports"
                    ],
                    "example": "export"
                  },
                  "resource": {
                    "type": "string",
                    "example": "user"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "menu",
                      "action",
                      "input"
                    ],
                    "example": "action"
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Permission"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/{id}": {
      "get": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Get permission by ID",
        "description": "Retrieve a specific permission by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Permission ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Permission"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Update permission",
        "description": "Update an existing permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Permission ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "user.export"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated description"
                  },
                  "module": {
                    "type": "string",
                    "example": "user-management"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "create",
                      "read",
                      "update",
                      "delete",
                      "access",
                      "hr_view",
                      "approve",
                      "reject",
                      "balance_manage",
                      "export",
                      "submit",
                      "reports"
                    ],
                    "example": "export"
                  },
                  "resource": {
                    "type": "string",
                    "example": "user"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "menu",
                      "action",
                      "input"
                    ],
                    "example": "action"
                  },
                  "isActive": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permission updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Permission"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Delete permission",
        "description": "Delete a permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Permission ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/seed": {
      "post": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Seed permissions",
        "description": "Seed comprehensive permission set with 47 initial permissions",
        "security": [],
        "responses": {
          "201": {
            "description": "Permissions seeded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/modules": {
      "get": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Get distinct modules",
        "description": "Get list of distinct permission modules",
        "responses": {
          "200": {
            "description": "Modules list retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "dashboard",
                            "user-management",
                            "role-management"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/permissions/status": {
      "get": {
        "tags": [
          "Permission Management"
        ],
        "summary": "Get system status",
        "description": "Get permission system status overview",
        "responses": {
          "200": {
            "description": "System status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "totalPermissions": {
                              "type": "integer",
                              "example": 47
                            },
                            "activePermissions": {
                              "type": "integer",
                              "example": 45
                            },
                            "totalModules": {
                              "type": "integer",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cms/news": {
      "get": {
        "tags": [
          "CMS - News"
        ],
        "summary": "Get all news articles",
        "description": "Get all news articles with filtering and pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search in title, description, and content"
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "announcement",
                "promotion",
                "event_news",
                "travel_tips",
                "local_story",
                "business_update"
              ]
            },
            "description": "Filter by news category"
          },
          {
            "name": "province",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by province"
          },
          {
            "name": "district",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by district"
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active status"
          },
          {
            "name": "featured",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by featured status"
          },
          {
            "name": "sortField",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "publishDate",
                "createdAt",
                "updatedAt",
                "order",
                "featured"
              ]
            },
            "description": "Field to sort by"
          },
          {
            "name": "sortDirection",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "description": "Sort direction"
          }
        ],
        "responses": {
          "200": {
            "description": "News articles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NewsContent"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "limit": {
                          "type": "integer",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "example": 25
                        },
                        "pages": {
                          "type": "integer",
                          "example": 3
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CMS - News"
        ],
        "summary": "Create a new news article",
        "description": "Create a new news article",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "content",
                  "category",
                  "author"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "เปิดตัวแพ็คเกจท่องเที่ยวใหม่ราคาพิเศษ"
                  },
                  "description": {
                    "type": "string",
                    "example": "แพ็คเกจท่องเที่ยวราคาพิเศษสำหรับช่วงปีใหม่"
                  },
                  "content": {
                    "type": "string",
                    "example": "เนื้อหาข่าวแบบเต็ม รองรับ HTML..."
                  },
                  "excerpt": {
                    "type": "string",
                    "example": "สรุปเนื้อหาสำหรับแสดงในหน้ารายการ"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "announcement",
                      "promotion",
                      "event_news",
                      "travel_tips",
                      "local_story",
                      "business_update"
                    ],
                    "example": "promotion"
                  },
                  "author": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "สมชาย ใจดี"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "somchai@example.com"
                      },
                      "bio": {
                        "type": "string",
                        "example": "นักเขียนท่องเที่ยว"
                      }
                    }
                  },
                  "coverImage": {
                    "type": "string",
                    "example": "/uploads/news/cover1.jpg"
                  },
                  "publishDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-10-02T10:00:00Z"
                  },
                  "source": {
                    "type": "string",
                    "example": "Local Spot News"
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "province": {
                        "type": "string",
                        "example": "เชียงใหม่"
                      },
                      "district": {
                        "type": "string",
                        "example": "เมือง"
                      }
                    }
                  },
                  "readTime": {
                    "type": "integer",
                    "example": 5
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "ท่องเที่ยว",
                      "โปรโมชั่น",
                      "เชียงใหม่"
                    ]
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "/uploads/news/image1.jpg"
                    ]
                  },
                  "isActive": {
                    "type": "boolean",
                    "default": true
                  },
                  "featured": {
                    "type": "boolean",
                    "default": false
                  },
                  "order": {
                    "type": "integer",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "News created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/NewsContent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/news/{id}": {
      "get": {
        "tags": [
          "CMS - News"
        ],
        "summary": "Get a single news article",
        "description": "Get a news article by ID (increments view count)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "News ID",
            "example": "64f123456789abcd12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "News article retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/NewsContent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "News not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CMS - News"
        ],
        "summary": "Update a news article",
        "description": "Update an existing news article",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "News ID",
            "example": "64f123456789abcd12345678"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "excerpt": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "announcement",
                      "promotion",
                      "event_news",
                      "travel_tips",
                      "local_story",
                      "business_update"
                    ]
                  },
                  "author": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "bio": {
                        "type": "string"
                      }
                    }
                  },
                  "coverImage": {
                    "type": "string"
                  },
                  "publishDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "featured": {
                    "type": "boolean"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "News updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/NewsContent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "News not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CMS - News"
        ],
        "summary": "Delete a news article",
        "description": "Delete a news article by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "News ID",
            "example": "64f123456789abcd12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "News deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "64f123456789abcd12345678"
                        },
                        "deleted": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "News not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/hotels": {
      "get": {
        "tags": [
          "CMS - Hotels"
        ],
        "summary": "Get all hotels",
        "description": "Get all hotels with filtering and pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search in title and description"
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "hotel",
                "resort",
                "hostel",
                "guesthouse",
                "villa"
              ]
            },
            "description": "Filter by hotel category"
          },
          {
            "name": "province",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by province"
          },
          {
            "name": "district",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by district"
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active status"
          },
          {
            "name": "featured",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by featured status"
          },
          {
            "name": "sortField",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "createdAt",
                "updatedAt",
                "order",
                "featured"
              ]
            },
            "description": "Field to sort by"
          },
          {
            "name": "sortDirection",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "description": "Sort direction"
          }
        ],
        "responses": {
          "200": {
            "description": "Hotels retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CMS - Hotels"
        ],
        "summary": "Create a new hotel",
        "description": "Create a new hotel entry",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "category",
                  "location"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "บ้านไทยรีสอร์ท"
                  },
                  "description": {
                    "type": "string",
                    "example": "รีสอร์ทสไตล์ล้านนา ท่ามกลางธรรมชาติที่สวยงาม"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "hotel",
                      "resort",
                      "hostel",
                      "guesthouse",
                      "villa"
                    ],
                    "example": "resort"
                  },
                  "location": {
                    "$ref": "#/components/schemas/Location"
                  },
                  "contactInfo": {
                    "$ref": "#/components/schemas/ContactInfo"
                  },
                  "amenities": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "WiFi ฟรี",
                      "สระว่ายน้ำ",
                      "สปา"
                    ]
                  },
                  "roomTypes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoomType"
                    }
                  },
                  "checkInOut": {
                    "type": "object",
                    "properties": {
                      "checkIn": {
                        "type": "string",
                        "example": "14:00"
                      },
                      "checkOut": {
                        "type": "string",
                        "example": "12:00"
                      }
                    }
                  },
                  "policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "ห้ามสูบบุหรี่",
                      "ห้ามนำสัตว์เลี้ยง"
                    ]
                  },
                  "nearbyAttractions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "ดอยสุเทพ",
                      "ตลาดวันเสาร์"
                    ]
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "/images/hotels/hotel1.jpg"
                    ]
                  },
                  "isActive": {
                    "type": "boolean",
                    "default": true
                  },
                  "featured": {
                    "type": "boolean",
                    "default": false
                  },
                  "order": {
                    "type": "number",
                    "default": 0
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "รีสอร์ท",
                      "ธรรมชาติ",
                      "ล้านนา"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Hotel created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/hotels/{id}": {
      "get": {
        "tags": [
          "CMS - Hotels"
        ],
        "summary": "Get hotel by ID",
        "description": "Get a specific hotel by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Hotel ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Hotel not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CMS - Hotels"
        ],
        "summary": "Update hotel by ID",
        "description": "Update a specific hotel by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Hotel ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "hotel",
                      "resort",
                      "hostel",
                      "guesthouse",
                      "villa"
                    ]
                  },
                  "location": {
                    "$ref": "#/components/schemas/Location"
                  },
                  "contactInfo": {
                    "$ref": "#/components/schemas/ContactInfo"
                  },
                  "amenities": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "roomTypes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoomType"
                    }
                  },
                  "checkInOut": {
                    "type": "object",
                    "properties": {
                      "checkIn": {
                        "type": "string"
                      },
                      "checkOut": {
                        "type": "string"
                      }
                    }
                  },
                  "policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "nearbyAttractions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "featured": {
                    "type": "boolean"
                  },
                  "order": {
                    "type": "number"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hotel updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Hotel not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CMS - Hotels"
        ],
        "summary": "Delete hotel by ID",
        "description": "Delete a specific hotel by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Hotel ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Hotel not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/restaurants": {
      "get": {
        "tags": [
          "CMS - Restaurants"
        ],
        "summary": "Get all restaurants",
        "description": "Get all restaurants with filtering and pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search in title and description"
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "restaurant",
                "cafe",
                "street_food",
                "local_cuisine",
                "international"
              ]
            },
            "description": "Filter by restaurant category"
          },
          {
            "name": "cuisine",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by cuisine type"
          },
          {
            "name": "priceRange",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "budget",
                "mid_range",
                "fine_dining"
              ]
            },
            "description": "Filter by price range"
          },
          {
            "name": "province",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by province"
          },
          {
            "name": "district",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by district"
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active status"
          },
          {
            "name": "featured",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by featured status"
          },
          {
            "name": "sortField",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "createdAt",
                "updatedAt",
                "order",
                "featured"
              ]
            },
            "description": "Field to sort by"
          },
          {
            "name": "sortDirection",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "description": "Sort direction"
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurants retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CMS - Restaurants"
        ],
        "summary": "Create a new restaurant",
        "description": "Create a new restaurant entry",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "category",
                  "location"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "ร้านข้าวซอยแม่ดำ"
                  },
                  "description": {
                    "type": "string",
                    "example": "ร้านข้าวซอยแท้ๆ สูตรดั้งเดิม รสชาติเข้มข้น"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "restaurant",
                      "cafe",
                      "street_food",
                      "local_cuisine",
                      "international"
                    ],
                    "example": "local_cuisine"
                  },
                  "location": {
                    "$ref": "#/components/schemas/Location"
                  },
                  "contactInfo": {
                    "$ref": "#/components/schemas/ContactInfo"
                  },
                  "cuisine": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "ไทย",
                      "เหนือ"
                    ]
                  },
                  "priceRange": {
                    "type": "string",
                    "enum": [
                      "budget",
                      "mid_range",
                      "fine_dining"
                    ],
                    "example": "budget"
                  },
                  "operatingHours": {
                    "$ref": "#/components/schemas/OperatingHours"
                  },
                  "specialties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "ข้าวซอยไก่",
                      "ข้าวซอยเนื้อ"
                    ]
                  },
                  "dietaryOptions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "ไม่มีหมู"
                    ]
                  },
                  "delivery": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean",
                        "example": true
                      },
                      "platforms": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "Grab Food",
                          "Food Panda"
                        ]
                      }
                    }
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "/images/restaurants/khao-soi.jpg"
                    ]
                  },
                  "isActive": {
                    "type": "boolean",
                    "default": true
                  },
                  "featured": {
                    "type": "boolean",
                    "default": false
                  },
                  "order": {
                    "type": "number",
                    "default": 0
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "ข้าวซอย",
                      "อาหารเหนือ",
                      "ดั้งเดิม"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Restaurant created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/restaurants/{id}": {
      "get": {
        "tags": [
          "CMS - Restaurants"
        ],
        "summary": "Get restaurant by ID",
        "description": "Get a specific restaurant by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Restaurant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurant retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Restaurant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CMS - Restaurants"
        ],
        "summary": "Update restaurant by ID",
        "description": "Update a specific restaurant by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Restaurant ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "restaurant",
                      "cafe",
                      "street_food",
                      "local_cuisine",
                      "international"
                    ]
                  },
                  "location": {
                    "$ref": "#/components/schemas/Location"
                  },
                  "contactInfo": {
                    "$ref": "#/components/schemas/ContactInfo"
                  },
                  "cuisine": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "priceRange": {
                    "type": "string",
                    "enum": [
                      "budget",
                      "mid_range",
                      "fine_dining"
                    ]
                  },
                  "operatingHours": {
                    "$ref": "#/components/schemas/OperatingHours"
                  },
                  "specialties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "dietaryOptions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "delivery": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean"
                      },
                      "platforms": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "featured": {
                    "type": "boolean"
                  },
                  "order": {
                    "type": "number"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Restaurant updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Restaurant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CMS - Restaurants"
        ],
        "summary": "Delete restaurant by ID",
        "description": "Delete a specific restaurant by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Restaurant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurant deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Restaurant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/travel-services": {
      "get": {
        "tags": [
          "CMS - Travel Services"
        ],
        "summary": "Get all travel services",
        "description": "Get all travel services with filtering and pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "transport",
                "tour",
                "guide",
                "rental",
                "activity"
              ]
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "featured",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Travel services retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CMS - Travel Services"
        ],
        "summary": "Create a new travel service",
        "description": "Create a new travel service entry",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelServiceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Travel service created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/travel-services/{id}": {
      "get": {
        "tags": [
          "CMS - Travel Services"
        ],
        "summary": "Get travel service by ID",
        "description": "Get a specific travel service by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Travel service retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Travel service not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CMS - Travel Services"
        ],
        "summary": "Update travel service by ID",
        "description": "Update a specific travel service by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelServiceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Travel service updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Travel service not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CMS - Travel Services"
        ],
        "summary": "Delete travel service by ID",
        "description": "Delete a specific travel service by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Travel service deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Travel service not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/local-products": {
      "get": {
        "tags": [
          "CMS - Local Products"
        ],
        "summary": "Get all local products",
        "description": "Get all local products with filtering and pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "handicraft",
                "food_product",
                "souvenir",
                "textile",
                "art"
              ]
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "featured",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inStock",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Local products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CMS - Local Products"
        ],
        "summary": "Create a new local product",
        "description": "Create a new local product entry",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalProductCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Local product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/local-products/{id}": {
      "get": {
        "tags": [
          "CMS - Local Products"
        ],
        "summary": "Get local product by ID",
        "description": "Get a specific local product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Local product retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Local product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CMS - Local Products"
        ],
        "summary": "Update local product by ID",
        "description": "Update a specific local product by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalProductCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Local product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Local product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CMS - Local Products"
        ],
        "summary": "Delete local product by ID",
        "description": "Delete a specific local product by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Local product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Local product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/events": {
      "get": {
        "tags": [
          "CMS - Events"
        ],
        "summary": "Get all events",
        "description": "Get all events with filtering and pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "festival",
                "market",
                "cultural",
                "sports",
                "workshop",
                "seasonal"
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter events starting from this date"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter events ending before this date"
          },
          {
            "name": "province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "featured",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Events retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CMS - Events"
        ],
        "summary": "Create a new event",
        "description": "Create a new event entry",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cms/events/{id}": {
      "get": {
        "tags": [
          "CMS - Events"
        ],
        "summary": "Get event by ID",
        "description": "Get a specific event by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CMS - Events"
        ],
        "summary": "Update event by ID",
        "description": "Update a specific event by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CMS - Events"
        ],
        "summary": "Delete event by ID",
        "description": "Delete a specific event by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication and authorization endpoints"
    },
    {
      "name": "User Management",
      "description": "User CRUD operations and management"
    },
    {
      "name": "Role Management",
      "description": "Role-based access control operations"
    },
    {
      "name": "Permission Management",
      "description": "Permission management and assignment"
    },
    {
      "name": "CMS - Hotels",
      "description": "Content Management System - Hotels and accommodations"
    },
    {
      "name": "CMS - Restaurants",
      "description": "Content Management System - Restaurants and food venues"
    },
    {
      "name": "CMS - Travel Services",
      "description": "Content Management System - Travel services and activities"
    },
    {
      "name": "CMS - Local Products",
      "description": "Content Management System - Local products and souvenirs"
    },
    {
      "name": "CMS - Events",
      "description": "Content Management System - Events and festivals"
    }
  ]
}